# variables:
# VERSION: the VoyantServer release number (for prod service)
# BRANCH: the branch (master or dev) to use (for dev service)
# MEMORY: the amount of GBs of memory to allocate
# LOCALDIR: the name of the local dir to use as Voyant's data dir
#
# example:
# LOCALDIR=/mnt/d/VoyantData MEMORY=8 docker compose up local -d
services:
  prod:
    build:
      args:
        VERSION: ${VERSION:-2.6.17}
      context: ./prod
    restart: always
    healthcheck: &healthcheck
      test: curl -f http://localhost:8080/resources/ext/6.2.0/charts-all.css || exit 1
      start_period: 60s
      interval: 20s
      timeout: 10s
      retries: 3
    ports: &ports
      - 8080:8080
      - 4000:4000
    environment:
      CATALINA_TMPDIR: /voyant-data
      CATALINA_OPTS: "-Xmx${MEMORY:-45}g"
      JAVA_OPTS: >-
        -XX:+UseConcMarkSweepGC
        -Dorg.voyanttools.server.storage=file-per-corpus
        -javaagent:/glowroot/glowroot.jar
        -Dglowroot.data.dir=/voyant-data/glowroot-data
    volumes:
     - ${LOCALDIR:-/voyant-data}/:/voyant-data
  local:
    build:
      context: ./local
    restart: always
    healthcheck: *healthcheck
    ports:
      - 8080:8080
    environment:
      CATALINA_TMPDIR: /voyant-data
      CATALINA_OPTS: "-Xmx${MEMORY:-4}g"
      JAVA_OPTS: >-
        -XX:+UseConcMarkSweepGC
        -Dorg.voyanttools.server.storage=file-per-corpus
    volumes:
     - ${LOCALDIR:-/voyant-data}/:/voyant-data
  dev:
    build:
      args:
        BRANCH: ${BRANCH:-dev}
      context: ./dev
    restart: always
    healthcheck: *healthcheck
    ports: *ports
    environment:
      CATALINA_TMPDIR: /voyant-data
      CATALINA_OPTS: "-Xmx${MEMORY:-10}g"
      JAVA_OPTS: >-
        -XX:+UseConcMarkSweepGC
        -Dorg.voyanttools.server.storage=file-per-corpus
        -javaagent:/glowroot/glowroot.jar
        -Dglowroot.data.dir=/voyant-data/glowroot-data
    volumes:
     - ${LOCALDIR:-/voyant-data}/:/voyant-data
